# using logstash 1.2.2
input {
  file {
		type => "twitter"
		path => ["/home/nikhil/temp/feed/twitter*.txt"]
		codec => "json"
	}
  file {
		type => "instagram"
		path => ["/home/nikhil/temp/feed/insta*.txt"]
		codec => "json"
	}
}
filter{
	if [type] == "twitter"{
	
	mutate {
		add_field => ["user_mention", "%{[entities][user_mentions]}","place_name", "%{[place][name]}", "user_id", "%{[user][id]}", "username", "%{[user][name]}",
			"user_img_url", "%{[user][profile_image_url]}", "content_img_url", "%{[entities][media][0][media_url]}", "coord", "%{[coordinates][coordinates][1]},%{[coordinates][coordinates][0]}"]
		rename => [ "id","post_id", "created_at","created", "retweet_count", "up_votes"] 
		remove_field => ["@version", "favorite_count","coordinates","truncated", "source", "retweeted", "lang", "entities", "id_str", "user", "contributors", "place", "in_reply_to_user_id_str", "filter_level", "in_reply_to_status_id", "geo", "in_reply_to_screen_name", "in_reply_to_user_id", "favorited", "in_reply_to_status_id_str", "host", "path", "possibly_sensitive"]
		}
	date { match => [ "to_created", "EEE MMM dd HH:mm:ss Z YYYY" ]
		}
	mutate {
	    remove_field => ["created"]
        convert => [ "post_id", "string" ]
	}
	}

	if [type] == "instagram"{
		mutate {
		add_field => ["user_mention", ""]
		remove_field => ["@version","source", "host", "path" ]
		}

	date { match => [ "created", "YYYY-MM-dd'T'HH:mm:ssZ" ]
		}
	mutate { remove_field => ["created"]}
	}

}
output {
#  stdout { 
#	codec => "json"
#	debug => "true"
#}
  elasticsearch_http {
   	host => "127.0.0.1"
   	port => 9200
   }
}
